{"ast":null,"code":"// import React, { useState } from 'react';\n// import './searchUser.css';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import toast from 'react-hot-toast';\n\n// const SearchUser = () => {\n//     const [Key, setKey] = useState('');\n//     const [users, setUsers] = useState([]);\n\n//     // const handleSearch = async (Key) => {\n//     //     try {\n//     //         const response = await fetch(`http://localhost:8000/api/findKey?key=/${Key}`);\n//     //         const result = await response.json();\n//     //         setUsers(result);\n//     //         console.log(Key);\n//     //         console.log(result);\n//     //     } catch (error) {\n//     //         console.error(\"Error fetching data:\", error);\n//     //     }\n//     // };\n\n//     const handleSearch = async (key) => {\n//         try {\n//           const response = await fetch(`http://localhost:8000/api/findKey/${key}`);\n//           if (!response.ok) {\n//             throw new Error(`Error: ${response.statusText}`);\n//           }\n//           const result = await response.json();\n//           setUsers(result);\n//           console.log(key);\n//           console.log(result);\n//         } catch (error) {\n//           console.error(\"Error fetching data:\", error);\n//         }\n//       };\n\n//     const deleteUser = async (userId) => {\n//         await axios.delete(`http://localhost:8000/api/delete/${userId}`)\n//             .then((respones) => {\n//                 setUsers((prevUser) => prevUser.filter((user) => user.fname !== userId))\n//                 toast.success(respones.data.msg, { position: 'top-right' })\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             })\n//     }\n\n//     return (\n//         <div className=\"SearchUser\">\n//             <h1>Search User Data</h1>\n//             <Link to={\"/\"} className='addButton'>Back</Link>\n//             <input\n//                 type=\"text\"\n//                 value={Key}\n//                 onChange={(e) => setKey(e.target.value)}\n//                 placeholder=\"Enter search key\"\n//             />\n//             <button onClick={handleSearch}>Search</button>\n\n//             {/* <div className=\"results\">\n//         {users.length > 0 ? (\n//           <ul>\n//             {users.map((item, index) => (\n//               <li key={index}>{JSON.stringify(item)}</li>\n//             ))}\n//           </ul>\n//         ) : (\n//           <p>No results found</p>\n//         )}\n//       </div> */}\n//             <div className='userTable'>\n//                 <Link to={\"/add\"} className='addButton'>Add User</Link>\n//                 <Link to={\"/search\"} className='addButton'>Search User</Link>\n//                 <table border={1} cellPadding={10} cellSpacing={0}>\n//                     <thead>\n//                         <tr>\n//                             <th>S.No.</th>\n//                             <th>name</th>\n//                             <th>Email</th>\n//                             <th>Department</th>\n//                             <th>Address</th>\n//                             <th>Salary</th>\n//                             <th>Mobile</th>\n//                             <th>Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {\n//                             users.map((user, index) => {\n//                                 return (\n//                                     <tr key={user.fname}>\n//                                         <td>{index + 1}</td>\n//                                         <td>{user.fname} {user.lname}</td>\n//                                         <td>{user.email}</td>\n//                                         <td>{user.sector}</td>\n//                                         <td>{user.address}</td>\n//                                         <td>{user.salary}</td>\n//                                         <td>{user.mobile}</td>\n//                                         <td className='actionButtons'>\n//                                             <button onClick={() => deleteUser(user.fname)}><i className=\"fa-solid fa-trash-can\"></i></button>\n//                                             <Link to={`/edit/` + user.fname}><i className=\"fa-solid fa-pen-to-square\"></i></Link>\n//                                         </td>\n//                                     </tr>\n//                                 )\n//                             })\n//                         }\n\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default SearchUser;\n\n// import React, { useState } from 'react';\n// import './searchUser.css';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import toast from 'react-hot-toast';\n\n// const SearchUser = () => {\n//     const [Key, setKey] = useState('');\n//     const [users, setUsers] = useState([]);\n\n//     const handleSearch = async (key) => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/api/findKey/${key}`);\n//             if (!response.ok) {\n//                 throw new Error(`Error: ${response.statusText}`);\n//             }\n//             const result = await response.json();\n//             setUsers(result);\n//             console.log(key);\n//             console.log(result);\n//         } catch (error) {\n//             console.error(\"Error fetching data:\", error);\n//         }\n//     };\n\n//     const deleteUser = async (userId) => {\n//         await axios.delete(`http://localhost:8000/api/delete/${userId}`)\n//             .then((response) => {\n//                 setUsers((prevUser) => prevUser.filter((user) => user._id !== userId));\n//                 toast.success(response.data.msg, { position: 'top-right' });\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     };\n\n//     return (\n//         <div className=\"SearchUser\">\n//             <h1>Search User Data</h1>\n//             <Link to={\"/\"} className='addButton'>Back</Link>\n//             <input\n//                 type=\"text\"\n//                 value={Key}\n//                 onChange={(e) => setKey(e.target.value)}\n//                 placeholder=\"Enter search key\"\n//             />\n//             <button onClick={() => handleSearch(Key)}>Search</button>\n\n//             <div className='userTable'>\n//                 <Link to={\"/add\"} className='addButton'>Add User</Link>\n//                 <Link to={\"/search\"} className='addButton'>Search User</Link>\n//                 <table border={1} cellPadding={10} cellSpacing={0}>\n//                     <thead>\n//                         <tr>\n//                             <th>S.No.</th>\n//                             <th>Name</th>\n//                             <th>Email</th>\n//                             <th>Department</th>\n//                             <th>Address</th>\n//                             <th>Salary</th>\n//                             <th>Mobile</th>\n//                             <th>Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {\n//                             users.map((user, index) => (\n//                                 <tr key={user._id}>\n//                                     <td>{index + 1}</td>\n//                                     <td>{user.fname} {user.lname}</td>\n//                                     <td>{user.email}</td>\n//                                     <td>{user.sector}</td>\n//                                     <td>{user.address}</td>\n//                                     <td>{user.salary}</td>\n//                                     <td>{user.mobile}</td>\n//                                     <td className='actionButtons'>\n//                                         <button onClick={() => deleteUser(user._id)}>\n//                                             <i className=\"fa-solid fa-trash-can\"></i>\n//                                         </button>\n//                                         <Link to={`/edit/${user._id}`}>\n//                                             <i className=\"fa-solid fa-pen-to-square\"></i>\n//                                         </Link>\n//                                     </td>\n//                                 </tr>\n//                             ))\n//                         }\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default SearchUser;","map":{"version":3,"names":[],"sources":["C:/Users/hp/Desktop/crud-application/crud-app/client/src/components/searchUser/SearchUser.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './searchUser.css';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import toast from 'react-hot-toast';\r\n\r\n// const SearchUser = () => {\r\n//     const [Key, setKey] = useState('');\r\n//     const [users, setUsers] = useState([]);\r\n\r\n\r\n//     // const handleSearch = async (Key) => {\r\n//     //     try {\r\n//     //         const response = await fetch(`http://localhost:8000/api/findKey?key=/${Key}`);\r\n//     //         const result = await response.json();\r\n//     //         setUsers(result);\r\n//     //         console.log(Key);\r\n//     //         console.log(result);\r\n//     //     } catch (error) {\r\n//     //         console.error(\"Error fetching data:\", error);\r\n//     //     }\r\n//     // };\r\n\r\n\r\n//     const handleSearch = async (key) => {\r\n//         try {\r\n//           const response = await fetch(`http://localhost:8000/api/findKey/${key}`);\r\n//           if (!response.ok) {\r\n//             throw new Error(`Error: ${response.statusText}`);\r\n//           }\r\n//           const result = await response.json();\r\n//           setUsers(result);\r\n//           console.log(key);\r\n//           console.log(result);\r\n//         } catch (error) {\r\n//           console.error(\"Error fetching data:\", error);\r\n//         }\r\n//       };\r\n\r\n\r\n\r\n//     const deleteUser = async (userId) => {\r\n//         await axios.delete(`http://localhost:8000/api/delete/${userId}`)\r\n//             .then((respones) => {\r\n//                 setUsers((prevUser) => prevUser.filter((user) => user.fname !== userId))\r\n//                 toast.success(respones.data.msg, { position: 'top-right' })\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//             })\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"SearchUser\">\r\n//             <h1>Search User Data</h1>\r\n//             <Link to={\"/\"} className='addButton'>Back</Link>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 value={Key}\r\n//                 onChange={(e) => setKey(e.target.value)}\r\n//                 placeholder=\"Enter search key\"\r\n//             />\r\n//             <button onClick={handleSearch}>Search</button>\r\n\r\n//             {/* <div className=\"results\">\r\n//         {users.length > 0 ? (\r\n//           <ul>\r\n//             {users.map((item, index) => (\r\n//               <li key={index}>{JSON.stringify(item)}</li>\r\n//             ))}\r\n//           </ul>\r\n//         ) : (\r\n//           <p>No results found</p>\r\n//         )}\r\n//       </div> */}\r\n//             <div className='userTable'>\r\n//                 <Link to={\"/add\"} className='addButton'>Add User</Link>\r\n//                 <Link to={\"/search\"} className='addButton'>Search User</Link>\r\n//                 <table border={1} cellPadding={10} cellSpacing={0}>\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>S.No.</th>\r\n//                             <th>name</th>\r\n//                             <th>Email</th>\r\n//                             <th>Department</th>\r\n//                             <th>Address</th>\r\n//                             <th>Salary</th>\r\n//                             <th>Mobile</th>\r\n//                             <th>Actions</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {\r\n//                             users.map((user, index) => {\r\n//                                 return (\r\n//                                     <tr key={user.fname}>\r\n//                                         <td>{index + 1}</td>\r\n//                                         <td>{user.fname} {user.lname}</td>\r\n//                                         <td>{user.email}</td>\r\n//                                         <td>{user.sector}</td>\r\n//                                         <td>{user.address}</td>\r\n//                                         <td>{user.salary}</td>\r\n//                                         <td>{user.mobile}</td>\r\n//                                         <td className='actionButtons'>\r\n//                                             <button onClick={() => deleteUser(user.fname)}><i className=\"fa-solid fa-trash-can\"></i></button>\r\n//                                             <Link to={`/edit/` + user.fname}><i className=\"fa-solid fa-pen-to-square\"></i></Link>\r\n//                                         </td>\r\n//                                     </tr>\r\n//                                 )\r\n//                             })\r\n//                         }\r\n\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SearchUser;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './searchUser.css';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import toast from 'react-hot-toast';\r\n\r\n// const SearchUser = () => {\r\n//     const [Key, setKey] = useState('');\r\n//     const [users, setUsers] = useState([]);\r\n\r\n//     const handleSearch = async (key) => {\r\n//         try {\r\n//             const response = await fetch(`http://localhost:8000/api/findKey/${key}`);\r\n//             if (!response.ok) {\r\n//                 throw new Error(`Error: ${response.statusText}`);\r\n//             }\r\n//             const result = await response.json();\r\n//             setUsers(result);\r\n//             console.log(key);\r\n//             console.log(result);\r\n//         } catch (error) {\r\n//             console.error(\"Error fetching data:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const deleteUser = async (userId) => {\r\n//         await axios.delete(`http://localhost:8000/api/delete/${userId}`)\r\n//             .then((response) => {\r\n//                 setUsers((prevUser) => prevUser.filter((user) => user._id !== userId));\r\n//                 toast.success(response.data.msg, { position: 'top-right' });\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//             });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"SearchUser\">\r\n//             <h1>Search User Data</h1>\r\n//             <Link to={\"/\"} className='addButton'>Back</Link>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 value={Key}\r\n//                 onChange={(e) => setKey(e.target.value)}\r\n//                 placeholder=\"Enter search key\"\r\n//             />\r\n//             <button onClick={() => handleSearch(Key)}>Search</button>\r\n\r\n//             <div className='userTable'>\r\n//                 <Link to={\"/add\"} className='addButton'>Add User</Link>\r\n//                 <Link to={\"/search\"} className='addButton'>Search User</Link>\r\n//                 <table border={1} cellPadding={10} cellSpacing={0}>\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>S.No.</th>\r\n//                             <th>Name</th>\r\n//                             <th>Email</th>\r\n//                             <th>Department</th>\r\n//                             <th>Address</th>\r\n//                             <th>Salary</th>\r\n//                             <th>Mobile</th>\r\n//                             <th>Actions</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {\r\n//                             users.map((user, index) => (\r\n//                                 <tr key={user._id}>\r\n//                                     <td>{index + 1}</td>\r\n//                                     <td>{user.fname} {user.lname}</td>\r\n//                                     <td>{user.email}</td>\r\n//                                     <td>{user.sector}</td>\r\n//                                     <td>{user.address}</td>\r\n//                                     <td>{user.salary}</td>\r\n//                                     <td>{user.mobile}</td>\r\n//                                     <td className='actionButtons'>\r\n//                                         <button onClick={() => deleteUser(user._id)}>\r\n//                                             <i className=\"fa-solid fa-trash-can\"></i>\r\n//                                         </button>\r\n//                                         <Link to={`/edit/${user._id}`}>\r\n//                                             <i className=\"fa-solid fa-pen-to-square\"></i>\r\n//                                         </Link>\r\n//                                     </td>\r\n//                                 </tr>\r\n//                             ))\r\n//                         }\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default SearchUser;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}